{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectCurrency","onChangeCurrency","amount","onChangeAmount","type","value","onChange","name","id","map","option","App","toAmount","fromAmount","BASE_URL","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","setAmount","amountInFromCurrency","setAmountInFromCurrency","excahngeRate","setExchangeRate","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","className","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAwBeA,MAtBf,SAAqBC,GAAQ,IAErBC,EAKAD,EALAC,gBACAC,EAIAF,EAJAE,eACAC,EAGAH,EAHAG,iBACAC,EAEAJ,EAFAI,OACAC,EACAL,EADAK,eAEJ,OACI,gCACI,uBAAOC,KAAK,SAASC,MAASH,EAC1BI,SAAYH,IAChB,wBAAQI,KAAK,GAAGC,GAAG,GAAGH,MAASL,EAC3BM,SAAYL,EADhB,SAEKF,EAAgBU,KAAI,SAAAC,GAAM,OACvB,wBAAuBL,MAAQK,EAA/B,SAAyCA,GAA1BA,YC+DpBC,MA5Ef,WAEE,IASIC,EAAUC,EATRC,EAAW,yCAFJ,EAIgCC,mBAAS,IAJzC,mBAIPhB,EAJO,KAIUiB,EAJV,OAK0BD,qBAL1B,mBAKPE,EALO,KAKOC,EALP,OAMsBH,mBAAS,IAN/B,mBAMPI,EANO,KAMKC,EANL,OAOcL,mBAAS,GAPvB,mBAOPb,EAPO,KAOCmB,EAPD,OAQ0CN,oBAAS,GARnD,mBAQPO,EARO,KAQeC,EARf,OAS0BR,qBAT1B,mBASPS,EATO,KASOC,EATP,KAoDb,OAxCGH,GACDT,EAAaX,EACbU,EAAWV,EAASsB,GAEpBZ,EAAWV,EAAOsB,EAGpBE,qBAAU,WACRC,MAAMb,GACLc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAM,SAAAG,GAEL,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdP,EAAgBM,EAAKI,MAAMH,SAE5B,IAEHN,qBAAU,WACY,MAAhBT,GAAsC,MAAdE,GAC1BQ,MAAM,GAAD,OAAIb,EAAJ,iBAAqBG,EAArB,oBAA6CE,IACjDS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIN,EAAgBM,EAAKI,MAAMhB,SAE1C,CAACF,EAAcE,IAehB,sBAAKkB,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEtC,gBAAmBA,EACnBC,eAAkBiB,EAClBhB,iBAAoB,SAAAqC,GAClBpB,EAAgBoB,EAAEC,OAAOlC,QAE3BF,eAnBN,SAAgCmC,GAC9BjB,EAAUiB,EAAEC,OAAOlC,OACnBkB,GAAwB,IAkBpBrB,OAAUW,IAEV,qBAAKwB,UAAU,SAAf,iBACF,cAAC,EAAD,CAAatC,gBAAmBA,EAAkBC,eAAkBmB,EAChElB,iBAAoB,SAAAqC,GACpBlB,EAAckB,EAAEC,OAAOlC,QAEvBH,OAAUU,EACVT,eAvBR,SAA8BmC,GAC5BjB,EAAUiB,EAAEC,OAAOlC,OACnBkB,GAAwB,UChD5BiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bec36f09.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction CurrencyRow(props) {\r\n    const{\r\n        currencyOptions,\r\n        selectCurrency,\r\n        onChangeCurrency, \r\n        amount,\r\n        onChangeAmount\r\n    } = props\r\n    return (\r\n        <div>\r\n            <input type=\"number\" value = {amount}\r\n                onChange = {onChangeAmount} />\r\n            <select name=\"\" id=\"\" value = {selectCurrency}\r\n                onChange = {onChangeCurrency}>\r\n                {currencyOptions.map(option => (\r\n                    <option key = {option} value= {option} >{option}</option>\r\n                ))}   \r\n            </select>       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrencyRow\r\n","import './App.css';\nimport CurrencyRow from './CurrencyRow'\nimport { useState, useEffect } from 'react'\n\nfunction App() {\n\n  const BASE_URL = \"https://api.exchangeratesapi.io/latest\"\n\n  const[currencyOptions, setCurrencyOptions] = useState([])\n  const[fromCurrency, setFromCurrency] = useState()\n  const[toCurrency, setToCurrency] = useState([])\n  const[amount, setAmount] = useState(1)\n  const[amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n  const[excahngeRate, setExchangeRate] = useState()\n\n  let toAmount, fromAmount\n  if(amountInFromCurrency) {\n    fromAmount = amount\n    toAmount = amount * excahngeRate\n  } else {\n    toAmount = amount/excahngeRate\n  }\n\n  useEffect(() => { \n    fetch(BASE_URL)\n    .then(res => res.json())\n    .then (data => {\n\n      const firstCurrency = Object.keys(data.rates)[0]\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n      setFromCurrency(data.base)\n      setToCurrency(firstCurrency)\n      setExchangeRate(data.rates[firstCurrency])\n    })\n  }, [])\n\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n      .then(res => res.json())\n      .then(data => setExchangeRate(data.rates[toCurrency]))\n    }\n  }, [fromCurrency, toCurrency])\n\n    \n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Currency Convertor</h1>\n      <CurrencyRow \n        currencyOptions = {currencyOptions} \n        selectCurrency = {fromCurrency}\n        onChangeCurrency = {e => {\n          setFromCurrency(e.target.value)\n        }}\n        onChangeAmount = {handleFromAmountChange}\n        amount = {fromAmount}\n        />\n        <div className=\"equals\"> = </div>\n      <CurrencyRow currencyOptions = {currencyOptions}  selectCurrency = {toCurrency}\n          onChangeCurrency = {e => {\n          setToCurrency(e.target.value)\n        }}\n          amount = {toAmount}\n          onChangeAmount = {handleToAmountChange}\n          />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}